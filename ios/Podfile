# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '15.1'
prepare_react_native_project!

# âœ… Enable modular headers globally (this is necessary for Firebase compatibility)
use_modular_headers!

# ðŸ”§ Optional: dynamically use static/dynamic frameworks
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
else
  use_frameworks! :linkage => :static
end

target 'HadithiSocial' do
  config = use_native_modules!

  # âœ… These are old-style (deprecated) Firebase subspecs. Instead, use modular Firebase v9+ SDK like this:
  # pod 'Firebase/Core' etc. are discouraged now. Use the following instead:

  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseAuth', :modular_headers => true
  pod 'FirebaseFirestore', :modular_headers => true
  pod 'FirebaseStorage', :modular_headers => true
  pod 'Google-Mobile-Ads-SDK', :modular_headers => true
  pod 'GoogleUserMessagingPlatform', :modular_headers => true

  # pod 'Google-Mobile-Ads-SDK', :modular_headers => true


  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :fabric_enabled => false, # <- disable fabric
    :new_arch_enabled => false, # <- disable new arch
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
 


    # âœ… Force all pods to use modular headers if missed
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
      end
    end
  end
end
